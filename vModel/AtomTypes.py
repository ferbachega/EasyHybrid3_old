class AtomicProperties :
    """ Class doc """
    def __init__ (self, vm_session = None):
        """ Class initialiser """


        self.vm_session = vm_session 
        
        self.solvent_dictionary  = {
                                    'WAT': 'O', 
                                    'SOL': 'O', 
                                    'HOH': 'O', 
                                    }
        
        self.residues_dictionary = {'CYS': 'C', 
                                    'ASP': 'D', 
                                    'SER': 'S', 
                                    'GLN': 'Q', 
                                    'LYS': 'K',
                                    'ILE': 'I', 
                                    'PRO': 'P', 
                                    'THR': 'T', 
                                    'PHE': 'F', 
                                    'ASN': 'N', 
                                    'GLY': 'G', 
                                    'HIS': 'H', 
                                    
                                    # amber
                                    "HID": "H",
                                    "HIE": "H",
                                    "HIP": "H",
                                    "ASH": "D",
                                    "GLH": "E",
                                    "CYX": "C",
                                    
                                    # charmm
                                    "HSD": "H", 
                                    "HSE": "H", 
                                    "HSP": "H", 
                                    
                                    
                                    'LEU': 'L', 
                                    'ARG': 'R', 
                                    'TRP': 'W', 
                                    'ALA': 'A', 
                                    'VAL': 'V', 
                                    'GLU': 'E', 
                                    'TYR': 'Y', 
                                    'MET': 'M'}
        
        
        
        
        self.ATOM_TYPES = {
                    'H'  : [ 1,   [0.900000, 0.900000, 0.900000], [204, 204, 204], [250,  22, 145],  0.230000 , 0.330000 , 1.200000 ],#                                                          0.53, 1.20, 0.37 ],	
                    'He' : [ 2,   [0.850000, 1.000000, 1.000000], [140, 140, 180], [255, 255, 255],  0.930000 , 0.700000 , 1.400000 ],#                                                          0.31, 1.40, 0.32 ],	
                    'Li' : [ 3,   [0.800000, 0.500000, 1.000000], [180, 180, 180], [217, 255, 255],  0.680000 , 1.230000 , 1.820000 ],#                                                          1.67, 1.82, 1.34 ],	
                    'Be' : [ 4,   [0.760000, 1.000000, 0.000000], [130,  90,  30], [204, 128, 255],  0.350000 , 0.900000 , 1.700000 ],#                                                          1.12, 0.30, 0.90 ],	
                    'B'  : [ 5,   [1.000000, 0.710000, 0.710000], [ 90, 130,  30], [194, 255,   0],  0.830000 , 0.820000 , 2.080000 ],#                                                          0.87, 0.30, 0.82 ],	
                    #'C'  : [ 6,   [0.231372, 0.619607, 0.44705 ], [ 80, 180, 180], [255, 181, 181],  0.680000 , 0.770000 , 1.950000 ],#                                                          0.67, 1.70, 0.77 ],	
                    
                    #'C'  : [ 6,   [0/255 , 173/255 , 173/255 ], [ 80, 180, 180], [255, 181, 181],  0.680000 , 0.770000 , 1.950000 ],#                                                          0.67, 1.70, 0.77 ],	
                    #'C'  : [ 6,   [0.1     , 1, 0.1         ], [ 80, 180, 180], [255, 181, 181],  0.680000 , 0.770000 , 1.950000 ],#                                                          0.67, 1.70, 0.77 ],	
                    
                    'C'  : [ 6,   [0.      , 1.0     , 0.      ], [ 80, 180, 180], [255, 181, 181],  0.680000 , 0.770000 , 1.950000 ],#                                                          0.67, 1.70, 0.77 ],	
                    #'C'  : [ 6,   [138/255,  100/255,  226/255], [ 80, 180, 180], [255, 181, 181],  0.680000 , 0.770000 , 1.950000 ],#                                                          0.67, 1.70, 0.77 ],	
                    #'C'  : [ 6,   [0.1,  0.1,  0.1], [ 80, 180, 180], [255, 181, 181],  0.680000 , 0.770000 , 1.950000 ],             #      Preto                                                     0.67, 1.70, 0.77 ],	
                    
                    'N'  : [ 7,   [0.050000, 0.050000, 1.000000], [  0, 160,   0], [144, 144, 144],  0.680000 , 0.700000 , 1.850000 ],#                                                          0.56, 1.55, 0.75 ],	
                    'O'  : [ 8,   [1.000000, 0.050000, 0.050000], [ 60,  60, 150], [ 48,  80, 248],  0.680000 , 0.660000 , 1.700000 ],#                                                          0.48, 1.52, 0.73 ],	
                    'F'  : [ 9,   [0.700000, 1.000000, 1.000000], [160,   0,   0], [255,  13,  13],  0.640000 , 0.611000 , 1.730000 ],#                                                          0.42, 1.47, 0.71 ],	
                    'Ne' : [ 10,  [0.700000, 0.890000, 0.960000], [  0, 160, 160], [144, 224,  80],  1.120000 , 0.700000 , 1.540000 ],#                                                          0.38, 1.54, 0.69 ],	
                    #'Na' : [ 11,  [0.670000, 0.360000, 0.950000], [180, 180, 180], [179, 227, 245],  1.9      , 3.06	 , 2.270000 ],#                                                          1.90, 2.27, 1.54 ],	
                    'Na' : [ 11,  [0.670000, 0.360000, 0.950000], [180, 180, 180], [179, 227, 245],  0.640000 , 0.611000 , 1.730000],#                                                          1.90, 2.27, 1.54 ],	
                    #'Mg' : [ 12,  [0.540000, 1.000000, 0.000000], [130,  90,  30], [171,  92, 242],  1.100000 , 1.360000 , 1.730000 ],#                                                          1.45, 1.73, 1.30 ],	
                    #'Mg' : [ 12,  [0.540000, 1.000000, 0.000000], [130,  90,  30], [171,  92, 242],  1.100000 , 1.50000 , 1.730000 ],#                                                          1.45, 1.73, 1.30 ],	
                    'Mg' : [ 12,  [0.540000, 1.000000, 0.000000], [130,  90,  30], [171,  92, 242],  1.100000 , 0.70000 , 1.540000 ],#                                                          1.45, 1.73, 1.30 ],	
                    'Al' : [ 13,  [0.750000, 0.650000, 0.650000], [ 90, 130,  30], [138, 255,   0],  1.350000 , 1.180000 , 2.050000 ],#                                                          1.18, 0.30, 1.18 ],	
                    'Si' : [ 14,  [0.500000, 0.600000, 0.600000], [100, 100, 150], [191, 166, 166],  1.200000 , 0.937000 , 2.100000 ],#                                                          1.11, 2.10, 1.11 ],	
                    'P'  : [ 15,  [1.000000, 0.500000, 0.000000], [ 60,  60,  60], [240, 200, 160],  1.100000 , 0.890000 , 2.080000 ],#                                                          0.98, 1.80, 1.06 ],	
                    'S'  : [ 16,  [1.000000, 1.000000, 0.190000], [120, 100,  10], [255, 128,   0],  1.020000 , 1.040000 , 2.000000 ],#                                                          0.88, 1.80, 1.02 ],	
                    'Cl' : [ 17,  [0.120000, 0.940000, 0.120000], [110, 120,  30], [255, 255,  48],  0.990000 , 0.997000 , 1.970000 ],#                                                          0.79, 1.75, 0.99 ],	
                    'Ar' : [ 18,  [0.500000, 0.820000, 0.890000], [ 10, 105, 120], [ 31, 240,  31],  1.570000 , 1.740000 , 1.880000 ],#                                                          0.71, 1.88, 0.97 ],	
                    'K'  : [ 19,  [0.560000, 0.250000, 0.830000], [180, 180, 180], [128, 209, 227],  1.330000 , 2.030000 , 2.750000 ],#                                                          2.43, 2.75, 1.96 ],	
                    'Ca' : [ 20,  [0.240000, 1.000000, 0.000000], [130,  90,  30], [143,  64, 212],  0.990000 , 1.740000 , 1.973000 ],#                                                          1.94, 0.30, 1.74 ],	
                    'Sc' : [ 21,  [0.900000, 0.900000, 0.900000], [ 90, 130,  30], [ 61, 255,   0],  1.440000 , 1.440000 , 1.700000 ],#                                                          1.84, 0.30, 1.44 ],	
                    'Ti' : [ 22,  [0.750000, 0.760000, 0.780000], [180, 180,  30], [230, 230, 230],  1.470000 , 1.320000 , 1.700000 ],#                                                          1.76, 0.30, 1.36 ],	
                    'V'  : [ 23,  [0.650000, 0.650000, 0.670000], [180, 180,  30], [191, 194, 199],  1.330000 , 1.220000 , 1.700000 ],#                                                          1.71, 0.30, 1.25 ],	
                    'Cr' : [ 24,  [0.540000, 0.600000, 0.780000], [180, 180,  30], [166, 166, 171],  1.350000 , 1.180000 , 1.700000 ],#                                                          1.66, 0.30, 1.27 ],	
                    'Mn' : [ 25,  [0.610000, 0.480000, 0.780000], [180, 180,  30], [138, 153, 199],  1.350000 , 1.170000 , 1.700000 ],#                                                          1.61, 0.30, 1.39 ],	
                    'Fe' : [ 26,  [0.500000, 0.480000, 0.780000], [180, 180,  30], [156, 122, 199],  1.340000 , 1.170000 , 1.700000 ],#                                                          1.56, 0.30, 1.25 ],	
                    'Co' : [ 27,  [0.440000, 0.480000, 0.780000], [180, 180,  30], [224, 102,  51],  1.330000 , 1.160000 , 1.700000 ],#                                                          1.52, 0.30, 1.26 ],	
                    'Ni' : [ 28,  [0.360000, 0.480000, 0.760000], [180, 180,  30], [240, 144, 160],  1.500000 , 1.150000 , 1.630000 ],#                                                          1.49, 1.63, 1.21 ],	
                    'Cu' : [ 29,  [1.000000, 0.480000, 0.380000], [180, 180,  30], [ 80, 208,  80],  1.520000 , 1.170000 , 1.400000 ],#                                                          1.45, 1.40, 1.38 ],	
                    'Zn' : [ 30,  [0.490000, 0.500000, 0.690000], [180, 180,  30], [200, 128,  51],  1.450000 , 1.250000 , 1.390000 ],#                                                          1.42, 1.39, 1.31 ],	
                    'Ga' : [ 31,  [0.760000, 0.560000, 0.560000], [180, 180,  30], [125, 128, 176],  1.220000 , 1.260000 , 1.870000 ],#                                                          1.36, 1.87, 1.26 ],	
                    'Ge' : [ 32,  [0.400000, 0.560000, 0.560000], [100, 100, 150], [194, 143, 143],  1.170000 , 1.188000 , 1.700000 ],#                                                          1.25, 0.30, 1.22 ],	
                    'As' : [ 33,  [0.740000, 0.500000, 0.890000], [ 60,  60,  60], [102, 143, 143],  1.210000 , 1.200000 , 1.850000 ],#                                                          1.14, 1.85, 1.19 ],	
                    'Se' : [ 34,  [1.000000, 0.630000, 0.000000], [120, 100,  10], [189, 128, 227],  1.220000 , 1.170000 , 1.900000 ],#                                                          1.03, 1.90, 1.16 ],	
                    'Br' : [ 35,  [0.650000, 0.160000, 0.160000], [110, 120,  30], [255, 161,   0],  1.210000 , 1.167000 , 2.100000 ],#                                                          0.94, 1.85, 1.14 ],	
                    'Kr' : [ 36,  [0.360000, 0.720000, 0.820000], [ 10, 105, 120], [166,  41,  41],  1.910000 , 1.910000 , 2.020000 ],#                                                          0.88, 2.02, 1.10 ],	
                    'Rb' : [ 37,  [0.440000, 0.180000, 0.690000], [180, 180, 180], [ 92, 184, 209],  1.470000 , 2.160000 , 1.700000 ],#                                                          2.65, 0.30, 2.11 ],	
                    'Sr' : [ 38,  [0.000000, 1.000000, 0.000000], [130,  90,  30], [112,  46, 176],  1.120000 , 1.910000 , 1.700000 ],#                                                          2.19, 0.30, 1.92 ],	
                    'Y'  : [ 39,  [0.580000, 1.000000, 1.000000], [ 90, 130,  30], [  0, 255,   0],  1.780000 , 1.620000 , 1.700000 ],#                                                          2.12, 0.30, 1.62 ],	
                    'Zr' : [ 40,  [0.580000, 0.880000, 0.880000], [110, 110,  30], [148, 255, 255],  1.560000 , 1.450000 , 1.700000 ],#                                                          2.06, 0.30, 1.48 ],	
                    'Nb' : [ 41,  [0.450000, 0.760000, 0.790000], [110, 110,  30], [148, 224, 224],  1.480000 , 1.340000 , 1.700000 ],#                                                          1.98, 0.30, 1.37 ],	
                    'Mo' : [ 42,  [0.330000, 0.710000, 0.710000], [110, 110,  30], [115, 194, 201],  1.470000 , 1.300000 , 1.700000 ],#                                                          1.90, 0.30, 1.45 ],	
                    'Tc' : [ 43,  [0.230000, 0.620000, 0.620000], [110, 110,  30], [ 84, 181, 181],  1.350000 , 1.270000 , 1.700000 ],#                                                          1.83, 0.30, 1.56 ],	
                    'Ru' : [ 44,  [0.140000, 0.560000, 0.560000], [110, 110,  30], [ 59, 158, 158],  1.400000 , 1.250000 , 1.700000 ],#                                                          1.78, 0.30, 1.26 ],	
                    'Rh' : [ 45,  [0.040000, 0.490000, 0.550000], [110, 110,  30], [ 36, 143, 143],  1.450000 , 1.250000 , 1.700000 ],#                                                          1.73, 0.30, 1.35 ],	
                    'Pd' : [ 46,  [0.000000, 0.410000, 0.520000], [110, 110,  30], [ 10, 125, 140],  1.500000 , 1.280000 , 1.630000 ],#                                                          1.69, 1.63, 1.31 ],	
                    'Ag' : [ 47,  [0.880000, 0.880000, 1.000000], [110, 110,  30], [  0, 105, 133],  1.590000 , 1.340000 , 1.720000 ],#                                                          1.65, 1.72, 1.53 ],	
                    'Cd' : [ 48,  [1.000000, 0.850000, 0.560000], [110, 110,  30], [192, 192, 192],  1.690000 , 1.480000 , 1.580000 ],#                                                          1.61, 1.58, 1.48 ],	
                    'In' : [ 49,  [0.650000, 0.460000, 0.450000], [110, 110,  30], [255, 217, 143],  1.630000 , 1.440000 , 1.930000 ],#                                                          1.56, 1.93, 1.44 ],	
                    'Sn' : [ 50,  [0.400000, 0.500000, 0.500000], [100, 100, 150], [166, 117, 115],  1.460000 , 1.385000 , 2.170000 ],#                                                          1.45, 2.17, 1.41 ],	
                    'Sb' : [ 51,  [0.620000, 0.390000, 0.710000], [ 90,  90,  90], [102, 128, 128],  1.460000 , 1.400000 , 2.200000 ],#                                                          1.33, 0.30, 1.38 ],	
                    'Te' : [ 52,  [0.830000, 0.480000, 0.000000], [120, 100,  10], [158,  99, 181],  1.470000 , 1.378000 , 2.060000 ],#                                                          1.23, 2.06, 1.35 ],	
                    'I'  : [ 53,  [0.580000, 0.000000, 0.580000], [110, 120,  30], [212, 122,   0],  1.400000 , 1.387000 , 2.150000 ],#                                                          1.15, 1.98, 1.33 ],	
                    'Xe' : [ 54,  [0.260000, 0.620000, 0.690000], [ 10, 105, 120], [148,   0, 148],  1.980000 , 1.980000 , 2.160000 ],#                                                          1.08, 2.16, 1.30 ],	
                    'Cs' : [ 55,  [0.340000, 0.090000, 0.560000], [180, 180, 180], [ 66, 158, 176],  1.670000 , 2.350000 , 1.700000 ],#                                                          2.98, 0.30, 2.25 ],	
                    'Ba' : [ 56,  [0.000000, 0.790000, 0.000000], [130,  90,  30], [ 87,  23, 143],  1.340000 , 1.980000 , 1.700000 ],#                                                          2.53, 0.30, 1.98 ],	
                    'La' : [ 57,  [0.440000, 0.830000, 1.000000], [ 90, 130,  30], [  0, 201,   0],  1.870000 , 1.690000 , 1.700000 ],#                                                          1.95, 0.30, 1.69 ],	
                    'Ce' : [ 58,  [1.000000, 1.000000, 0.780000], [150, 150,  30], [112, 212, 255],  1.830000 , 1.830000 , 1.700000 ],#                                                          1.85, 0.30, 0.30 ],	
                    'Pr' : [ 59,  [0.850000, 1.000000, 0.780000], [ 10, 105,  10], [255, 255, 199],  1.820000 , 1.820000 , 1.700000 ],#                                                          2.47, 0.30, 0.30 ],	
                    'Nd' : [ 60,  [0.780000, 1.000000, 0.780000], [ 10, 105,  10], [217, 255, 199],  1.810000 , 1.810000 , 1.700000 ],#                                                          2.06, 0.30, 0.30 ],	
                    'Pm' : [ 61,  [0.640000, 1.000000, 0.780000], [ 10, 105,  10], [199, 255, 199],  1.800000 , 1.800000 , 1.700000 ],#                                                          2.05, 0.30, 0.30 ],	
                    'Sm' : [ 62,  [0.560000, 1.000000, 0.780000], [ 10, 105,  10], [163, 255, 199],  1.800000 , 1.800000 , 1.700000 ],#                                                          2.38, 0.30, 0.30 ],	
                    'Eu' : [ 63,  [0.380000, 1.000000, 0.780000], [ 10, 105,  10], [143, 255, 199],  1.990000 , 1.990000 , 1.700000 ],#                                                          2.31, 0.30, 0.30 ],	
                    'Gd' : [ 64,  [0.270000, 1.000000, 0.780000], [ 10, 105,  10], [ 97, 255, 199],  1.790000 , 1.790000 , 1.700000 ],#                                                          2.33, 0.30, 0.30 ],	
                    'Tb' : [ 65,  [0.190000, 1.000000, 0.780000], [ 10, 105,  10], [ 69, 255, 199],  1.760000 , 1.760000 , 1.700000 ],#                                                          2.25, 0.30, 0.30 ],	
                    'Dy' : [ 66,  [0.120000, 1.000000, 0.780000], [ 10, 105,  10], [ 48, 255, 199],  1.750000 , 1.750000 , 1.700000 ],#                                                          2.28, 0.30, 0.30 ],	
                    'Ho' : [ 67,  [0.000000, 1.000000, 0.610000], [ 10, 105,  10], [ 31, 255, 199],  1.740000 , 1.740000 , 1.700000 ],#                                                          2.26, 0.30, 0.30 ],	
                    'Er' : [ 68,  [0.000000, 0.900000, 0.460000], [ 10, 105,  10], [  0, 255, 156],  1.730000 , 1.730000 , 1.700000 ],#                                                          2.26, 0.30, 0.30 ],	
                    'Tm' : [ 69,  [0.000000, 0.830000, 0.320000], [ 10, 105,  10], [  0, 230, 117],  1.720000 , 1.720000 , 1.700000 ],#                                                          2.22, 0.30, 0.30 ],	
                    'Yb' : [ 70,  [0.000000, 0.750000, 0.220000], [ 10, 105,  10], [  0, 212,  82],  1.940000 , 1.940000 , 1.700000 ],#                                                          2.22, 0.30, 0.30 ],	
                    'Lu' : [ 71,  [0.000000, 0.670000, 0.140000], [ 10, 105,  10], [  0, 191,  56],  1.720000 , 1.720000 , 1.700000 ],#                                                          2.17, 0.30, 1.60 ],	
                    'Hf' : [ 72,  [0.300000, 0.760000, 1.000000], [ 10, 105,  10], [  0, 171,  36],  1.570000 , 1.440000 , 1.700000 ],#                                                          2.08, 0.30, 1.50 ],	
                    'Ta' : [ 73,  [0.300000, 0.650000, 1.000000], [150, 150,  30], [ 77, 194, 255],  1.430000 , 1.340000 , 1.700000 ],#                                                          2.00, 0.30, 1.38 ],	
                    'W'  : [ 74,  [0.130000, 0.580000, 0.840000], [150, 150,  30], [ 77, 166, 255],  1.370000 , 1.300000 , 1.700000 ],#                                                          1.93, 0.30, 1.46 ],	
                    'Re' : [ 75,  [0.150000, 0.490000, 0.670000], [150, 150,  30], [ 33, 148, 214],  1.350000 , 1.280000 , 1.700000 ],#                                                          1.88, 0.30, 1.59 ],	
                    'Os' : [ 76,  [0.150000, 0.400000, 0.590000], [150, 150,  30], [ 38, 125, 171],  1.370000 , 1.260000 , 1.700000 ],#                                                          1.85, 0.30, 1.28 ],	
                    'Ir' : [ 77,  [0.090000, 0.330000, 0.530000], [150, 150,  30], [ 38, 102, 150],  1.320000 , 1.270000 , 1.700000 ],#                                                          1.80, 0.30, 1.37 ],	
                    'Pt' : [ 78,  [0.960000, 0.930000, 0.820000], [150, 150,  30], [ 23,  84, 135],  1.500000 , 1.300000 , 1.720000 ],#                                                          1.77, 1.75, 1.28 ],	
                    'Au' : [ 79,  [0.800000, 0.820000, 0.120000], [150, 150,  30], [208, 208, 224],  1.500000 , 1.340000 , 1.660000 ],#                                                          1.74, 1.66, 1.44 ],	
                    'Hg' : [ 80,  [0.710000, 0.710000, 0.760000], [150, 150,  30], [255, 209,  35],  1.700000 , 1.490000 , 1.550000 ],#                                                          1.71, 1.55, 1.49 ],	
                    'Tl' : [ 81,  [0.650000, 0.330000, 0.300000], [150, 150,  30], [184, 184, 208],  1.550000 , 1.480000 , 1.960000 ],#                                                          1.56, 1.96, 1.48 ],	
                    'Pb' : [ 82,  [0.340000, 0.350000, 0.380000], [100, 100, 150], [166,  84,  77],  1.540000 , 1.480000 , 2.020000 ],#                                                          1.54, 2.02, 1.47 ],	
                    'Bi' : [ 83,  [0.620000, 0.310000, 0.710000], [ 90,  90,  90], [ 87,  89,  97],  1.540000 , 1.450000 , 1.700000 ],#                                                          1.43, 0.30, 1.46 ],	
                    'Po' : [ 84,  [0.670000, 0.360000, 0.000000], [120, 100,  10], [158,  79, 181],  1.680000 , 1.460000 , 1.700000 ],#                                                          1.35, 0.30, 0.30 ],	
                    'At' : [ 85,  [0.460000, 0.310000, 0.270000], [110, 120,  30], [171,  92,   0],  1.700000 , 1.450000 , 1.700000 ],#                                                          1.27, 0.30, 0.30 ],	
                    'Rn' : [ 86,  [0.260000, 0.510000, 0.590000], [ 10, 105, 120], [117,  79,  69],  2.400000 , 2.400000 , 1.700000 ],#                                                          1.20, 0.30, 1.45 ],	
                    'Fr' : [ 87,  [0.260000, 0.000000, 0.400000], [180, 180, 180], [ 66, 130, 150],  2.000000 , 2.000000 , 1.700000 ],#                                                          0.01, 0.30, 0.30 ],	
                    'Ra' : [ 88,  [0.000000, 0.490000, 0.000000], [130,  90,  30], [ 66,   0, 102],  1.900000 , 1.900000 , 1.700000 ],#                                                          0.01, 0.30, 0.30 ],	
                    'Ac' : [ 89,  [0.440000, 0.670000, 0.980000], [ 90, 130,  30], [  0, 125,   0],  1.880000 , 1.880000 , 1.700000 ],#                                                          1.95, 0.30, 0.30 ],	
                    'Th' : [ 90,  [0.000000, 0.730000, 1.000000], [180, 180,  30], [112, 171, 250],  1.790000 , 1.790000 , 1.700000 ],#                                                          1.80, 0.30, 0.30 ],	
                    'Pa' : [ 91,  [0.000000, 0.630000, 1.000000], [120, 100,  10], [  0, 186, 255],  1.610000 , 1.610000 , 1.700000 ],#                                                          1.80, 0.30, 0.30 ],	
                    'U'  : [ 92,  [0.000000, 0.560000, 1.000000], [120, 100,  10], [  0, 161, 255],  1.580000 , 1.580000 , 1.860000 ],#                                                          1.75, 1.86, 0.30 ],	
                    'Np' : [ 93,  [0.000000, 0.500000, 1.000000], [120, 100,  10], [  0, 143, 255],  1.550000 , 1.550000 , 1.700000 ],#                                                          1.75, 0.30, 0.30 ],	
                    'Pu' : [ 94,  [0.000000, 0.420000, 1.000000], [120, 100,  10], [  0, 128, 255],  1.530000 , 1.530000 , 1.700000 ],#                                                          1.75, 0.30, 0.30 ],	
                    'Am' : [ 95,  [0.330000, 0.360000, 0.950000], [120, 100,  10], [  0, 107, 255],  1.510000 , 1.070000 , 1.700000 ],#                                                          1.75, 0.30, 0.30 ],	
                    'Cm' : [ 96,  [0.470000, 0.360000, 0.890000], [120, 100,  10], [ 84,  92, 242],  1.500000 , 0.000000 , 1.700000 ],#                                                          0.01, 0.30, 0.30 ],	
                    'Bk' : [ 97,  [0.540000, 0.310000, 0.890000], [120, 100,  10], [120,  92, 227],  1.500000 , 0.000000 , 1.700000 ],#                                                          0.01 ],
                    'Cf' : [ 98,  [0.630000, 0.210000, 0.830000], [120, 100,  10], [138,  79, 227],  1.500000 , 0.000000 , 1.700000 ],#                                                          0.01 ],
                    'Es' : [ 99,  [0.700000, 0.120000, 0.830000], [120, 100,  10], [161,  54, 212],  1.500000 , 0.000000 , 1.700000 ],#                                                          0.01 ],
                    'Fm' : [ 100, [0.700000, 0.120000, 0.730000], [120, 100,  10], [179,  31, 212],  1.500000 , 0.000000 , 1.700000 ],#                                                          0.01 ],
                    'Md' : [ 101, [0.700000, 0.050000, 0.650000], [120, 100,  10], [179,  31, 186],  1.500000 , 0.000000 , 1.700000 ],#                                                          0.01 ],
                    'No' : [ 102, [0.740000, 0.050000, 0.530000], [120, 100,  10], [179,  13, 166],  1.500000 , 0.000000 , 1.700000 ],#                                                          0.01 ],
                    'Lr' : [ 103, [0.780000, 0.000000, 0.400000], [120, 100,  10], [189,  13, 135],  1.500000 , 0.000000 , 1.700000 ],#                                                          0.01 ],
                    'Rf' : [ 104, [0.800000, 0.000000, 0.350000], [120, 100,  10], [199,   0, 102],  1.600000 , 0.000000 , 1.700000 ],#                                                          0.01 ],
                    'Db' : [ 105, [0.820000, 0.000000, 0.310000], [230, 230, 230], [204,   0,  89],  1.600000 , 0.000000 , 1.700000 ],#                                                          0.01 ],
                    'Sg' : [ 106, [0.850000, 0.000000, 0.270000], [230, 230, 230], [209,   0,  79],  1.600000 , 0.000000 , 1.700000 ],#                                                          0.01 ],
                    'Bh' : [ 107, [0.880000, 0.000000, 0.220000], [179,   0, 179], [217,   0,  69],  1.600000 , 0.000000 , 1.700000 ],#                                                          0.01 ],
                    'Hs' : [ 108, [0.900000, 0.000000, 0.180000], [179,   0, 179], [224,   0,  56],  1.600000 , 0.000000 , 1.700000 ],#                                                          0.01 ],
                    'Mt' : [ 109, [0.920000, 0.000000, 0.150000], [179,   0, 179], [230,   0,  46],  1.600000 , 0.000000 , 1.700000 ],#                                                          0.01 ],
                    'Xx' : [ 0,   [0.070000, 0.500000, 0.700000], [179,   0, 179], [235,   0,  38],  1.000000 , 0.000000 , 0.000000 ],#                                                          0.01 ],
                    'X'  : [ 0,   [0.070000, 0.500000, 0.700000], [179,   0, 179], [235,   0,  38],  1.000000 , 0.000000 , 0.000000 ],#                                                          0.01 ]
                    'pK' : [ 0,   [1.000000, 1.00000,  0.000000], [179,   0, 179], [235,   0,  38],  1.000000 , 0.000000 , 0.000000 ],#                                                          0.01 ]
                    }
        
        self.ATOM_TYPES_list = self.ATOM_TYPES.keys()
        
        self.ATOM_TYPES_BY_ATOMICNUMBER = {
                                        1   : 'H'  , 
                                        2   : 'He' , 
                                        3   : 'Li' , 
                                        4   : 'Be' , 
                                        5   : 'B'  , 
                                        6   : 'C'  , 
                                        7   : 'N'  , 
                                        8   : 'O'  , 
                                        9   : 'F'  , 
                                        10  : 'Ne' , 
                                        11  : 'Na' , 
                                        12  : 'Mg' , 
                                        13  : 'Al' , 
                                        14  : 'Si' , 
                                        15  : 'P'  , 
                                        16  : 'S'  , 
                                        17  : 'Cl' , 
                                        18  : 'Ar' , 
                                        19  : 'K'  , 
                                        20  : 'Ca' , 
                                        21  : 'Sc' , 
                                        22  : 'Ti' , 
                                        23  : 'V'  , 
                                        24  : 'Cr' , 
                                        25  : 'Mn' , 
                                        26  : 'Fe' , 
                                        27  : 'Co' , 
                                        28  : 'Ni' , 
                                        29  : 'Cu' , 
                                        30  : 'Zn' , 
                                        31  : 'Ga' , 
                                        32  : 'Ge' , 
                                        33  : 'As' , 
                                        34  : 'Se' , 
                                        35  : 'Br' , 
                                        36  : 'Kr' , 
                                        37  : 'Rb' , 
                                        38  : 'Sr' , 
                                        39  : 'Y'  , 
                                        40  : 'Zr' , 
                                        41  : 'Nb' , 
                                        42  : 'Mo' , 
                                        43  : 'Tc' , 
                                        44  : 'Ru' , 
                                        45  : 'Rh' , 
                                        46  : 'Pd' , 
                                        47  : 'Ag' , 
                                        48  : 'Cd' , 
                                        49  : 'In' , 
                                        50  : 'Sn' , 
                                        51  : 'Sb' , 
                                        52  : 'Te' , 
                                        53  : 'I'  , 
                                        54  : 'Xe' , 
                                        55  : 'Cs' , 
                                        56  : 'Ba' , 
                                        57  : 'La' , 
                                        58  : 'Ce' , 
                                        59  : 'Pr' , 
                                        60  : 'Nd' , 
                                        61  : 'Pm' , 
                                        62  : 'Sm' , 
                                        63  : 'Eu' , 
                                        64  : 'Gd' , 
                                        65  : 'Tb' , 
                                        66  : 'Dy' , 
                                        67  : 'Ho' , 
                                        68  : 'Er' , 
                                        69  : 'Tm' , 
                                        70  : 'Yb' , 
                                        71  : 'Lu' , 
                                        72  : 'Hf' , 
                                        73  : 'Ta' , 
                                        74  : 'W'  , 
                                        75  : 'Re' , 
                                        76  : 'Os' , 
                                        77  : 'Ir' , 
                                        78  : 'Pt' , 
                                        79  : 'Au' , 
                                        80  : 'Hg' , 
                                        81  : 'Tl' , 
                                        82  : 'Pb' , 
                                        83  : 'Bi' , 
                                        84  : 'Po' , 
                                        85  : 'At' , 
                                        86  : 'Rn' , 
                                        87  : 'Fr' , 
                                        88  : 'Ra' , 
                                        89  : 'Ac' , 
                                        90  : 'Th' , 
                                        91  : 'Pa' , 
                                        92  : 'U'  , 
                                        93  : 'Np' , 
                                        94  : 'Pu' , 
                                        95  : 'Am' , 
                                        96  : 'Cm' , 
                                        97  : 'Bk' , 
                                        98  : 'Cf' , 
                                        99  : 'Es' , 
                                        100 : 'Fm' , 
                                        101 : 'Md' , 
                                        102 : 'No' , 
                                        103 : 'Lr' , 
                                        104 : 'Rf' , 
                                        105 : 'Db' , 
                                        106 : 'Sg' , 
                                        107 : 'Bh' , 
                                        108 : 'Hs' , 
                                        109 : 'Mt' , 
                                        0   : 'Xx' , 
                                        0   : 'X'  ,
                                        }
                                        
                                        
                                        
    def get_color_rgb(self, name):
        """ Return the color of an atom in RGB. Note that the returned
            value is in scale of 0 to 1, but you can change this in the
            index. If the atomname does not match any of the names
            given, it returns the default dummy value of atom X.
        """
        try:
            color = self.ATOM_TYPES[name][1]
        except KeyError:
            if name[0] == 'H' or name in self.hydrogen:
                color = self.ATOM_TYPES['H'][1]
            elif name[0] == 'C':
                color = self.ATOM_TYPES['C'][1]
            elif name[0] == 'O':
                color = self.ATOM_TYPES['O'][1]
            elif name[0] == 'N':
                color = self.ATOM_TYPES['N'][1]
            elif name[0] == 'S':
                color = self.ATOM_TYPES['S'][1]
            else:
                color = self.ATOM_TYPES['X'][1]
        color = [int(color[0]*250), int(color[1]*250), int(color[2]*250)]
        return color

    def get_color(self, name):
        """ Return the color of an atom in RGB. Note that the returned
            value is in scale of 0 to 1, but you can change this in the
            index. If the atomname does not match any of the names
            given, it returns the default dummy value of atom X.
        """
        try:
            color = self.ATOM_TYPES[name][1]
        except KeyError:
            if name[0] == 'H' or name in self.hydrogen:
                color = self.ATOM_TYPES['H'][1]
            elif name[0] == 'C':
                color = self.ATOM_TYPES['C'][1]
            elif name[0] == 'O':
                color = self.ATOM_TYPES['O'][1]
            elif name[0] == 'N':
                color = self.ATOM_TYPES['N'][1]
            elif name[0] == 'S':
                color = self.ATOM_TYPES['S'][1]
            else:
                color = self.ATOM_TYPES['X'][1]
                ##print(name)
        return color

    def get_cov_rad(self, name):
        """
        """
        
        
        try:
            rad = self.ATOM_TYPES[name][5]
        except KeyError:
            if name[0] == 'H' or name in self.hydrogen:
                rad = self.ATOM_TYPES['H'][5]
            elif name[0] == 'C':
                rad = self.ATOM_TYPES['C'][5]
            elif name[0] == 'O':
                rad = self.ATOM_TYPES['O'][5]
            elif name[0] == 'N':
                rad = self.ATOM_TYPES['N'][5]
            elif name[0] == 'S':
                rad = self.ATOM_TYPES['S'][5]
            else:
                rad = 0.30
        #if name[0] == "P":
        #    print (name, rad)
        return rad

    def get_radius(self, name):
        """
        """
        try:
            rad = self.ATOM_TYPES[name][6]/5.0
        except KeyError:
            if name[0] == 'H' or name in self.hydrogen:
                rad = self.ATOM_TYPES['H'][6]/5.0
            elif name[0] == 'C':
                rad = self.ATOM_TYPES['C'][6]/5.0
            elif name[0] == 'O':
                rad = self.ATOM_TYPES['O'][6]/5.0
            elif name[0] == 'N':
                rad = self.ATOM_TYPES['N'][6]/5.0
            elif name[0] == 'S':
                rad = self.ATOM_TYPES['S'][6]/5.0
            else:
                rad = 0.30
        return rad

    def get_vdw_rad(self, name):
        """
        """
        try:
            vdw = self.ATOM_TYPES[name][6]
        except KeyError:
            if name[0] == 'H' or name in self.hydrogen:
                vdw = self.ATOM_TYPES['H'][6]
            elif name[0] == 'C':      
                vdw = self.ATOM_TYPES['C'][6]
            elif name[0] == 'O':      
                vdw = self.ATOM_TYPES['O'][6]
            elif name[0] == 'N':      
                vdw = self.ATOM_TYPES['N'][6]
            elif name[0] == 'S':      
                vdw = self.ATOM_TYPES['S'][6]
            else:
                vdw = 0.40
        return vdw

    def get_ball_rad(self, name):
        """
        """
        try:
            ball = self.ATOM_TYPES[name][4]
        except KeyError:
            if name[0] == 'H' or name in self.hydrogen:
                ball = self.ATOM_TYPES['H'][4]
            elif name[0] == 'C':
                ball = self.ATOM_TYPES['C'][4]
            elif name[0] == 'O':
                ball = self.ATOM_TYPES['O'][4]
            elif name[0] == 'N':
                ball = self.ATOM_TYPES['N'][4]
            elif name[0] == 'S':
                ball = self.ATOM_TYPES['S'][4]
            else:
                ball = 0.30
        return ball/2.0

    def get_symbol (self, name):
        """ Function doc """
        
        name  =  name.strip()
        
        
        if name == '':
            return ''
        
        name2 = name
        for char in name:
            if char.isnumeric():
                name2 = name2.replace(char,'')
                #print ('replace', name)
            else:
                #print (name)
                pass
        name = name2
        #print (name)
        if len(name) >=3:
            name  = name[:2]
        
        if len(name) == 2:
            if name[1].isnumeric():
                symbol  =  name[0]
            else:
                pass
                
        
        
        if name in self.ATOM_TYPES.keys():
            return name
        
        else:
           
            if name[0] == 'H':
                
                if name[1] == 'g':
                    symbol =  'Hg'
               
                elif  name[-1] =='e':
                    symbol = 'He'                    
                
                else:
                    symbol =  'H'

            
            
            elif name[0] == 'C':
                
                if name[1] == 'a':
                    symbol =  'Ca'
                    
                elif  name[-1] =='l':
                    symbol = 'Cl'
                
                elif  name[-1] =='L':
                    symbol = 'Cl'
                   
                elif  name[-1] =='d':
                    symbol = 'Cd'
                
                elif  name[-1] =='u':
                    symbol = 'Cu'
                
                else:
                    symbol =  'C'
        
            
            
            
            
            elif name[0] == 'N':
                
                if name[1] == 'i':
                    symbol =  'Ni'
                
                elif name[1] == 'a':
                    symbol =  'Na'
                
                elif name[1] == 'A':
                    symbol =  'Na'
                
                elif name[1] == 'e':
                    symbol =  'Ne'
                elif name[1] == 'b':
                    symbol =  'Nb'
                
                else:
                    symbol =  'N'
                    
            
            
            
            elif name[0] == 'O':
                
                if name[1] == 'g':
                    symbol =  'Og'
                
                if name[1] == 's':
                    symbol =  'Os'
                
                else:
                    symbol =  'O'                        
            
            
            
            elif name[0] == 'S':           
                if name[1] == 'I':
                    symbol =  'Si'
                
                elif name[1] == 'e':
                    symbol =  'Se'
                else:
                    symbol =  'S'   
            
            
            
            
            
            elif name[0] == 'P':
                
                if name[1] == 'd':
                    symbol =  'Pd'
                    
                elif  name[1] == 'b':
                    symbol =  'Pb'
                
                elif  name[1] == 'o':
                    symbol =  'Po'
                
                else:
                    symbol =  'P' 
            
            
            elif name[0] == 'O':
                
                if name[1] == 'g':
                    symbol =  'Og'
                else:
                    symbol =  'O' 


            elif name[0] == 'M':
                
                if name[1] == 'n':
                    symbol =  'Mn'
                    
                elif name[1] == 'N':
                    symbol =  'Mn'
                
                elif name[1] == 'o':
                    symbol =  'Mo'
                
                elif name[1] == 'G':
                    symbol =  'Mg'
                    
                else:
                    symbol =  'X' 

        
            else:
                #print (name)
                #if returnX:
                symbol = 'X'
                #else:
                #symbol = ''
    
        return symbol
            
        
        
        
        
        
        


   
                                        
                                        
                                        
                                        
                                        
                                        
                                        
                                        
                                        
                                        
                                        
                                        
                                        
                                        
                                        
                                        
                                        
                                        
                                        
                                        
